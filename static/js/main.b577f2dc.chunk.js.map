{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CreateTodo/CreateTodo.jsx","App.js","index.js"],"names":["completedItems","activeItems","TodoList","props","deleteItem","editItem","checkedItem","todoArr","length","JSON","parse","localStorage","getItem","useState","category","setCategory","allItems","map","item","index","className","value","status","type","checked","onChange","text","onClick","title","autoFocus","data-aos","getLocalItems","hasOwnProperty","CreateTodo","setTodoArr","todo","setTodo","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","event","console","log","key","target","id","unshift","setItem","stringify","sweetalert","onKeyPress","e","obj","inputHandle","placeholder","i","icon","buttons","dangerMode","then","res","splice","newEditItem","find","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b577f2dc.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport './TodoList.css'\r\n\r\nlet completedItems;\r\nlet activeItems;\r\n\r\nfunction TodoList(props) {\r\n    let deleteItem = props.deleteItem;\r\n    let editItem = props.editItem;\r\n    let checkedItem = props.checkedItem;\r\n    let todoArr = props.todoArr.length > 0 ? props.todoArr : JSON.parse(localStorage.getItem('todos'))\r\n    let [category,setCategory] = useState('All')  \r\n    \r\n    // --------find all items---------\r\n      let allItems = todoArr && todoArr.length >0 ?\r\n      todoArr.map((item,index)=>{       \r\n        return(         \r\n      <div className=\"items\">\r\n        <div className=\"item-left\">       \r\n          <input value={item.status} type=\"checkbox\" checked={item.status}\r\n                onChange={()=>checkedItem(index)} />\r\n          <p className={item.status ? \"line-through\" : null}>{item.text}</p>          \r\n        </div>\r\n        <div className=\"item-right\">\r\n        {!item.status && <i onClick={()=>editItem(index)} className=\"fas fa-pencil-alt\" title=\"Update Item\"></i> }\r\n        <i onClick={()=>deleteItem(index)} className=\"fas fa-trash-alt\" title=\"Delete Item\"></i>\r\n        </div>\r\n      </div>    \r\n        )\r\n      }) : null\r\n\r\n      const displayAll = () =>{\r\n        setCategory(\"All\")\r\n      }\r\n\r\n      // --------completed task------------\r\n      const displayCompleted = () =>{\r\n        setCategory(\"Completed\")\r\n       completedItems = todoArr && todoArr.length >0 ?\r\n        todoArr.map((item,index)=>{         \r\n          return(\r\n            item.status &&\r\n        <div className=\"items\">\r\n          <div className=\"item-left\"> \r\n            <input value={item.status} type=\"checkbox\" checked={item.status}\r\n                  onChange={()=>checkedItem(index)} />\r\n            <p className={item.status ? \"line-through\" : null}>{item.text}</p>            \r\n          </div>\r\n          <div className=\"item-right\">\r\n          {!item.status && <i onClick={()=>editItem(index)} className=\"fas fa-pencil-alt\" title=\"Update Item\"></i> }\r\n          <i onClick={()=>deleteItem(index)} className=\"fas fa-trash-alt\" title=\"Delete Item\"></i>\r\n          </div>\r\n        </div>\r\n          )\r\n        }) : null \r\n      }\r\n\r\n      // ---------Active task-----------\r\n      const displayActive = () =>{\r\n        setCategory(\"Active\")\r\n       activeItems = todoArr && todoArr.length >0 ?\r\n        todoArr.map((item,index)=>{         \r\n          return(\r\n            !item.status &&\r\n        <div className=\"items\">\r\n          <div className=\"item-left\"> \r\n            <input value={item.status} type=\"checkbox\" checked={item.status}\r\n                  onChange={()=>checkedItem(index)} />\r\n            <p className={item.status ? \"line-through\" : null}>{item.text}</p>            \r\n          </div>\r\n          <div className=\"item-right\">\r\n          {!item.status && <i onClick={()=>editItem(index)} className=\"fas fa-pencil-alt\" title=\"Update Item\"></i> }\r\n          <i onClick={()=>deleteItem(index)} className=\"fas fa-trash-alt\" title=\"Delete Item\"></i>\r\n          </div>\r\n        </div>\r\n          )\r\n        }) : null \r\n      }\r\n    \r\n      // ----------rendering------------\r\n    return (\r\n        <div className=\"items-container\">\r\n          <div className=\"list-buttons\">\r\n            <button className={category === \"Active\" ? \"changebg button\" : \"button\"} onClick={displayActive}>Active</button>\r\n            <button className={category === \"All\" ? \"changebg button\" : \"button\"} onClick={displayAll} autoFocus>All</button>\r\n            <button className={category === \"Completed\" ? \"changebg button\" : \"button\"} onClick={displayCompleted}>Completed</button>            \r\n          </div>\r\n          <div className=\"app-content\" data-aos=\"fade-right\">\r\n             {category === 'All' && allItems}\r\n             {category === 'Completed' && completedItems}\r\n             {category === 'Active' && activeItems} \r\n          </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, {useState} from 'react'\r\nimport './CreateTodo.css'\r\nimport TodoList from '../TodoList/TodoList';\r\nimport sweetalert from 'sweetalert'\r\n\r\nconst getLocalItems = ()=>{\r\n  let todos = localStorage.hasOwnProperty(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : []\r\n  return todos;\r\n}\r\n\r\nfunction CreateTodo() {\r\n\r\n  const [todoArr,setTodoArr] = useState(getLocalItems());\r\n  const [todo,setTodo] =useState({text:\"\",status:false});\r\n  \r\n  let [toggleSubmit,setToggleSubmit] = useState(true)\r\n  let [isEditItem,setIsEditItem] = useState(null)\r\n\r\n  const inputHandle =(e)=>{\r\n    console.log(\"call input handle\");\r\n    let obj={\r\n      text:e.target.value,\r\n      status:false\r\n    }\r\n    setTodo(obj)  \r\n  }\r\n  \r\n  // ---------add a new item or edit an existing item----------------\r\n  const addItem = (event) =>{\r\n    console.log(\"call add item\");\r\n    if(event.key === 'Enter' || event.target.id ==='addTodo' || event.target.id === 'editTodo'){\r\n      if(todo.text !== ''){\r\n          if(toggleSubmit){    \r\n            console.log(\"Inside if case\")      \r\n            todoArr.unshift(todo)\r\n            localStorage.setItem('todos',JSON.stringify(todoArr))\r\n            setTodoArr(todoArr)           \r\n            setTodo({text:\"\",status:false});\r\n          }else{\r\n            setTodoArr(\r\n              todoArr.map((item,key)=>{\r\n                if(key === isEditItem){\r\n                  todoArr[isEditItem].text=todo.text\r\n                  return todoArr[isEditItem]\r\n                }\r\n                return item\r\n              })\r\n            )\r\n            localStorage.setItem('todos',JSON.stringify(todoArr))\r\n            setTodo({text:\"\",status:false});\r\n            setIsEditItem(null)\r\n            setToggleSubmit(true)\r\n          }          \r\n      }else{\r\n        sweetalert(\"Oops\", \"Please write todo first\", \"error\")\r\n      }\r\n    }\r\n  }\r\n\r\n  // -------mark completed item------------\r\n  const checkedItem =(i) =>{\r\n    if(todoArr[i].status !== true){\r\n      todoArr[i].status = true\r\n      localStorage.setItem('todos',JSON.stringify(todoArr))\r\n      setTodoArr(getLocalItems())\r\n      sweetalert(\"Good job\",\"Todo completed\",'success')\r\n    }else{\r\n      todoArr[i].status = false\r\n      localStorage.setItem('todos',JSON.stringify(todoArr))\r\n      setTodoArr(getLocalItems())\r\n    }\r\n  }\r\n\r\n  // --------delete item------------\r\n  const deleteItem =(index)=>{\r\n    sweetalert({\r\n        title:\"Are you sure?\",\r\n        text:\"Once deleted, you will not be able to recover this file! \",\r\n        icon:\"warning\",\r\n        buttons:true,\r\n        dangerMode:true\r\n    }).then(res=>{\r\n        if(res){\r\n            todoArr.splice(index,1)           \r\n            localStorage.setItem('todos',JSON.stringify(todoArr))\r\n            setTodoArr(getLocalItems())\r\n        }\r\n    })\r\n  }\r\n  \r\n  // -------------edit an item-----------------\r\nconst editItem = (index) =>{\r\n    let newEditItem = todoArr.find((todo,key)=>index===key)\r\n    setToggleSubmit(false)\r\n    setTodo(newEditItem);\r\n    setIsEditItem(index)    \r\n  }\r\n  \r\n  // --------rendering-------------\r\n  return (\r\n    <div className=\"content-wraper\"> \r\n            <div>\r\n                <h1>Todo App</h1>\r\n            </div>\r\n            <div className=\"input-wraper\" data-aos=\"fade-left\">\r\n                <div className=\"input\">\r\n                    <input value={todo.text} onKeyPress={addItem} onChange={(e)=>inputHandle(e)} type=\"text\" placeholder=\"Add items...\"/>\r\n                    {\r\n                        toggleSubmit ?\r\n                            <i onClick={addItem} id=\"addTodo\" className=\"fas fa-plus\" title=\"Add item\"></i>\r\n                        :\r\n                            <i onClick={addItem} id=\"editTodo\" className=\"fas fa-pencil-alt\" title=\"Update Item\"></i>\r\n                    }            \r\n                </div>\r\n            </div>\r\n            \r\n              <TodoList todoArr={todoArr} checkedItem={checkedItem} \r\n                      deleteItem={deleteItem} editItem={editItem} />\r\n             \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CreateTodo\r\n","import React from 'react';\nimport './App.css';\nimport CreateTodo from './components/CreateTodo/CreateTodo';\n\nfunction App() {\n  return (\n    <div className=\"app\">      \n        <CreateTodo />\n    </div>   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}